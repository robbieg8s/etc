# Shell aliases

# This is useful when i forget to reflexively quote find patterns
alias find='noglob find'
# These days most vi's are vim, but some installation use the name they were
# invoked under to subset the features exposed, which i rarely want.
alias vi=vim

# For now i'm putting functions for interactive shells only in this file also
# These are mostly convenience wrappers

# Convenience short cuts for recent-download

# cat most recent download
dlc() {
  cat "$(recent-download "$@")"
}

# file name of most recent download
dlf() {
  recent-download "$@"
}

## Git shortcuts
ga() {
  git add "$@"
}
compdef _git ga=git-add
gb() {
  git branch "$@"
}
compdef _git gb=git-branch
gc() {
  git checkout "$@"
}
compdef _git gc=git-checkout
gd() {
  git diff "$@"
}
compdef _git gd=git-diff
gds() {
  git diff --staged "$@"
}
compdef _git gds=git-diff
gf() {
  git fetch "$@"
}
compdef _git gf=git-fetch
gl() {
  git log "$@"
}
compdef _git gl=git-log
# Note: insert options before branch (expected usage --oneline ...)
glom() {
  git log "$@" origin/main
}
# Complete as if origin/main wasn't there, since options are inserted ahead of it
compdef _git glom=git-log
gm() {
  git merge "$@"
}
compdef _git gm=git-merge
gp() {
  git pull "$@"
}
compdef _git gp=git-pull
gq() {
  git push "$@"
}
compdef _git gq=git-push
gs() {
  git status "$@"
}
compdef _git gs=git-status
# "view" for git show
gv() {
  git show "$@"
}
compdef _git gv=git-show
gw() {
  git web "$@"
}
# useful in commit review workflows
gwh() {
  git web "$@" HEAD
}
gx() {
  git commit "$@"
}
compdef _git gx=git-commit

# Shell history in sqlite
# These are for interactive use, and so fail if teh relevant variables aren't set

hd() {
  "${HALFYAK_ETC_SQLITE_HISTORY:?}" "${HALFYAK_ETC_SQLITE_HISTORY_DB:?}" directory "$@"
}

hq() {
  "${HALFYAK_ETC_SQLITE_HISTORY:?}" "${HALFYAK_ETC_SQLITE_HISTORY_DB:?}" command "$@"
}

hs() {
  "${HALFYAK_ETC_SQLITE_HISTORY:?}" "${HALFYAK_ETC_SQLITE_HISTORY_DB:?}" session "$@"
}
