vim9script

set autoindent
set autoread
set autowriteall
set background=dark
set cedit=<C-X>
set cmdheight=3
set expandtab
set grepformat=%f:%l:%c:%m
set grepprg=rg\ --vimgrep
set ignorecase
set incsearch
set laststatus=2 # => always show status line
set mouse=a
set relativenumber
set shiftwidth=2
set smartcase
set spell
set spelllang=en_au
set tabstop=2
set textwidth=132
set wildmode=list:longest

filetype plugin on
syntax on

map <C-X> <Esc>
map! <C-X> <Esc>

nmap <Tab> >>
nmap <S-Tab> <<
nmap <C-G> :cnext<CR>

vmap <Tab> >gv
vmap <S-Tab> <gv

cmap <C-K> <Up>
cmap <C-J> <Down>

def XdgCacheDir(name: string, Consumer: func(string), errormsg: string)
  var dir = ($XDG_CACHE_HOME ?? ($HOME .. "/.cache")) .. "/halfyak.org/etc/vim/" .. name
  if "" == getftype(dir)
    mkdir(dir, "p")
  endif
  if "dir" == getftype(dir)
    Consumer(dir)
  else
    echoerr errormsg
  endif
enddef

XdgCacheDir("backup", (cachedir) => {
  &backupdir = cachedir
}, "Cannot make backup directory - backups are off")
XdgCacheDir("swap", (cachedir) => {
  &directory = cachedir
}, "Cannot make swap directory - swap is off")
XdgCacheDir("undo", (cachedir) => {
  &undodir = cachedir
  &undofile = 1
}, "Cannot make undo directory - undo is off")
XdgCacheDir("netrw", (cachedir) => {
  g:netrw_home = cachedir
}, "Cannot make netrw directory, ~/.vim might get polluted")

# As far as i can tell, these need to be global to be accessible from the expression register

# Tab -> indent if line upto cursor is all whitespace, autocomplete otherwise
def g:HalfYakTab(): string
  if strpart( getline('.'), 0, col('.') - 1 ) =~ '^\W*$'
    return "\<C-T>"
  else
    return "\<C-N>"
  endif
enddef

# Untab -> dedent if line upto cursor is all whitespace, autocomplete previous match otherwise
def g:HalfYakUntab(): string
  if strpart( getline('.'), 0, col('.') - 1 ) =~ '^\W*$'
    return "\<C-D>"
  else
    return "\<C-P>"
  endif
enddef

# Mappings for Tab, Untab
inoremap <Tab> <C-R>=HalfYakTab()<CR>
inoremap <S-Tab> <C-R>=HalfYakUntab()<CR>

# Use a group so we can delete all and reload
augroup HalfYakAuGroup
  autocmd!
  autocmd BufWritePost vimrc {
    const scriptfile = expand('<sfile>:p')
    # If it's the real vimrc, read it again
    if (expand('%:p') == scriptfile)
      execute 'source' fnameescape(scriptfile)
    endif
  }
augroup END
