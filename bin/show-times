#!/bin/zsh
# Show a colorised table of hours in timezones to help find good overlaps.
# Bugs: Unknown timezones silently fall back to UTC

if [[ $# -eq 0 ]]
then
  printf 'Usage: %s [ timezones ... ]\n' "$0"
  printf '  timezones are give as TZ variable values, for example:\n'
  printf '  :; %s Australia/Sydney Asia/Bangkok Europe/Rome America/Chicago\n' "$0"
else

  # Yeah, these are raw ANSI escapes, i probably should use tput
  # The times the colors are used for to demarcate "working hours" and "shoulder"
  #       00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23
  colors=( 1  1  1  1  1  1  3  3  3  4  4  4  4  4  4  4  4  4  3  3  3  1  1  1)


  width=0
  for zone in "$@"
  do
    [[ "${#zone}" -gt "${width}" ]] && { width="${#zone}" }
  done

  now="$(date '+%s')"
  for zone in "$@"
  do
    TZ="${zone}" date -j -f "%s" "${now}" "+%a %H %M" | while read day hour minute
    do
      print -n "${hour}:${minute} ${(r:width:)zone} ${day} "
      for i in {00..23}
      do
        print -n "\e[30m\e[$((40+colors[1+hour]))m\e[1m${(l:2::0:)hour}\e[0m "
        hour=$(((hour + 1)%24))
      done
      # It would seem -v and -j -f don't play well together
      TZ="${zone}" date -j -f "%s" "$((now + 24*60*60))" "+%a"
    done
  done
fi
